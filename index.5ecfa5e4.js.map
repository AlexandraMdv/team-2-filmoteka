{"mappings":"AAAA,MCGMA,EAAiBC,SAASC,cAAc,oBACxCC,EAAUF,SAASC,cAAc,aACjCE,EAAUH,SAASC,cAAc,aAGvC,IAAIG,EAAS,GACTC,EAAe,EA0BnB,SAASC,IACP,MAAMC,EAAaP,SAASC,cAAc,UAAUO,YAE9CC,EAASJ,GAAgBE,EAC/BR,EAAeW,MAAMC,UAAY,cAAcF,M,CAGjDP,EAAQU,iBAAiB,SAAS,KAC5BP,EAAe,IACjBA,IACAC,I,IAIJH,EAAQS,iBAAiB,SAAS,KAChC,MAAML,EAAaP,SAASC,cAAc,UAAUO,YACpDK,QAAQC,IAAIP,GAEZ,MAAMQ,EAAiBhB,EAAeS,YACtCK,QAAQC,IAAIC,GAGZ,MAAMC,EAAWC,KAAKC,OAAOd,EAAOe,OAASZ,EAAaQ,GAAkBR,GAC5EM,QAAQC,IAAIE,GAGRX,EAAeW,IACjBX,IACAQ,QAAQC,IAAIT,GAEZC,I,IAtDJc,iBACE,MAAMC,QAAiBC,MAXT,6GAYRC,QAAaF,EAASG,OAC5BpB,EAASmB,EAAKE,QAKd1B,EAAe2B,UAAY,GAC3BtB,EAAOuB,SAASC,IACd,MAAMC,EAAU7B,SAAS8B,cAAc,OACvCD,EAAQE,UAAUC,IAAI,SACtBH,EAAQH,UAAY,oDACyBE,EAAMK,qBAAqBL,EAAMM,wBAM9EnC,EAAeoC,YAAYN,EAAQ,IAErCvB,G,CAqCF8B","sources":["src/js/api.js","src/js/carousel.js"],"sourcesContent":["const ENDPOINT = 'https://api.themoviedb.org';\nconst API_KEY = '918aba14d75940fa7e0d80373b9ee894';","const API_KEY = '918aba14d75940fa7e0d80373b9ee894';\nconst API_URL = `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n\nconst carouselMovies = document.querySelector('.carousel-movies');\nconst prevBtn = document.querySelector('.prev-btn');\nconst nextBtn = document.querySelector('.next-btn');\n\n\nlet movies = [];\nlet currentIndex = 0;\n\nasync function fetchMovies() {\n  const response = await fetch(API_URL);\n  const data = await response.json();\n  movies = data.results;\n  displayMovies();\n}\n\nfunction displayMovies() {\n  carouselMovies.innerHTML = '';\n  movies.forEach((movie) => {\n    const movieEl = document.createElement('div');\n    movieEl.classList.add('movie');\n    movieEl.innerHTML = `\n      <img src=\"https://image.tmdb.org/t/p/w500${movie.poster_path}\" alt=\"${movie.title}\">\n      \n    `;\n    // I think we only need images of the trending movies\n    //<h3>${movie.title}</h3>\n    //<p class=\"rating\">${'â˜…'.repeat(Math.round(movie.vote_average / 2))}</p>\n    carouselMovies.appendChild(movieEl);\n  });\n  updateCarousel();\n}\n\nfunction updateCarousel() {\n  const movieWidth = document.querySelector('.movie').offsetWidth;\n  //220px is not the width of each movie card, it is dinamically calculate by min-width: calc(100% / 5) so we need the offsetWidth to find out the width which changes depending on viewport width\n  const offset = currentIndex * -movieWidth; // 220px is the width of each movie + gap\n  carouselMovies.style.transform = `translateX(${offset}px)`;\n}\n\nprevBtn.addEventListener('click', () => {\n  if (currentIndex > 0) {\n    currentIndex--;\n    updateCarousel();\n  }\n});\n\nnextBtn.addEventListener('click', () => {\n  const movieWidth = document.querySelector('.movie').offsetWidth; // Calculate dynamic image width\n  console.log(movieWidth);\n  \n  const containerWidth = carouselMovies.offsetWidth;\n  console.log(containerWidth);\n  \n  \n  const maxIndex = Math.round((movies.length * movieWidth - containerWidth) / movieWidth);\n  console.log(maxIndex);\n  \n  \n  if (currentIndex < maxIndex) {\n    currentIndex++;\n    console.log(currentIndex);\n    \n    updateCarousel();\n  }\n});\n\nfetchMovies();\n"],"names":["$0d260286e6b745c0$var$carouselMovies","document","querySelector","$0d260286e6b745c0$var$prevBtn","$0d260286e6b745c0$var$nextBtn","$0d260286e6b745c0$var$movies","$0d260286e6b745c0$var$currentIndex","$0d260286e6b745c0$var$updateCarousel","movieWidth","offsetWidth","offset","style","transform","addEventListener","console","log","containerWidth","maxIndex","Math","round","length","async","response","fetch","data","json","results","innerHTML","forEach","movie","movieEl","createElement","classList","add","poster_path","title","appendChild","$0d260286e6b745c0$var$fetchMovies"],"version":3,"file":"index.5ecfa5e4.js.map"}